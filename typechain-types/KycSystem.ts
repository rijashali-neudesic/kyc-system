/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "./common";

export type BankStruct = {
  name: BytesLike;
  ethAddress: AddressLike;
  complaintReported: BigNumberish;
  kycCount: BigNumberish;
  isAllowedToVote: boolean;
  regNumber: BytesLike;
};

export type BankStructOutput = [
  name: string,
  ethAddress: string,
  complaintReported: bigint,
  kycCount: bigint,
  isAllowedToVote: boolean,
  regNumber: string
] & {
  name: string;
  ethAddress: string;
  complaintReported: bigint;
  kycCount: bigint;
  isAllowedToVote: boolean;
  regNumber: string;
};

export type CustomerStruct = {
  username: BytesLike;
  data: BytesLike;
  kycStatus: boolean;
  downVotes: BigNumberish;
  upVotes: BigNumberish;
  bank: AddressLike;
};

export type CustomerStructOutput = [
  username: string,
  data: string,
  kycStatus: boolean,
  downVotes: bigint,
  upVotes: bigint,
  bank: string
] & {
  username: string;
  data: string;
  kycStatus: boolean;
  downVotes: bigint;
  upVotes: bigint;
  bank: string;
};

export interface KycSystemInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "addBank"
      | "addCustomer"
      | "addKycRequest"
      | "downVoteCustomer"
      | "getBankComplaints"
      | "modifyBankIsAllowedToVote"
      | "modifyCustomer"
      | "removeBank"
      | "removeKycRequest"
      | "reportBank"
      | "upVoteCustomer"
      | "viewBankDetails"
      | "viewCustomer"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addBank",
    values: [BytesLike, AddressLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "addCustomer",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "addKycRequest",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "downVoteCustomer",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getBankComplaints",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "modifyBankIsAllowedToVote",
    values: [AddressLike, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "modifyCustomer",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeBank",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeKycRequest",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "reportBank",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "upVoteCustomer",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "viewBankDetails",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "viewCustomer",
    values: [BytesLike]
  ): string;

  decodeFunctionResult(functionFragment: "addBank", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addCustomer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addKycRequest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "downVoteCustomer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBankComplaints",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "modifyBankIsAllowedToVote",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "modifyCustomer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "removeBank", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeKycRequest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "reportBank", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "upVoteCustomer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "viewBankDetails",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "viewCustomer",
    data: BytesLike
  ): Result;
}

export interface KycSystem extends BaseContract {
  connect(runner?: ContractRunner | null): KycSystem;
  waitForDeployment(): Promise<this>;

  interface: KycSystemInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  addBank: TypedContractMethod<
    [_name: BytesLike, _ethAddress: AddressLike, _regNumber: BytesLike],
    [void],
    "nonpayable"
  >;

  addCustomer: TypedContractMethod<
    [_name: BytesLike, _data: BytesLike],
    [void],
    "nonpayable"
  >;

  addKycRequest: TypedContractMethod<
    [_cUsername: BytesLike, _customerData: BytesLike],
    [void],
    "nonpayable"
  >;

  downVoteCustomer: TypedContractMethod<
    [_cUsername: BytesLike],
    [void],
    "nonpayable"
  >;

  getBankComplaints: TypedContractMethod<
    [_bankAddr: AddressLike],
    [bigint],
    "view"
  >;

  modifyBankIsAllowedToVote: TypedContractMethod<
    [_bankAddr: AddressLike, _allowed: boolean],
    [void],
    "nonpayable"
  >;

  modifyCustomer: TypedContractMethod<
    [_cUsername: BytesLike, _data: BytesLike],
    [boolean],
    "nonpayable"
  >;

  removeBank: TypedContractMethod<
    [_bankAddr: AddressLike],
    [void],
    "nonpayable"
  >;

  removeKycRequest: TypedContractMethod<
    [_cUsername: BytesLike],
    [void],
    "nonpayable"
  >;

  reportBank: TypedContractMethod<
    [_bankAddr: AddressLike],
    [void],
    "nonpayable"
  >;

  upVoteCustomer: TypedContractMethod<
    [_cUsername: BytesLike],
    [void],
    "nonpayable"
  >;

  viewBankDetails: TypedContractMethod<
    [_bankAddr: AddressLike],
    [BankStructOutput],
    "view"
  >;

  viewCustomer: TypedContractMethod<
    [_cUsername: BytesLike],
    [CustomerStructOutput],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "addBank"
  ): TypedContractMethod<
    [_name: BytesLike, _ethAddress: AddressLike, _regNumber: BytesLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "addCustomer"
  ): TypedContractMethod<
    [_name: BytesLike, _data: BytesLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "addKycRequest"
  ): TypedContractMethod<
    [_cUsername: BytesLike, _customerData: BytesLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "downVoteCustomer"
  ): TypedContractMethod<[_cUsername: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "getBankComplaints"
  ): TypedContractMethod<[_bankAddr: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "modifyBankIsAllowedToVote"
  ): TypedContractMethod<
    [_bankAddr: AddressLike, _allowed: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "modifyCustomer"
  ): TypedContractMethod<
    [_cUsername: BytesLike, _data: BytesLike],
    [boolean],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "removeBank"
  ): TypedContractMethod<[_bankAddr: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "removeKycRequest"
  ): TypedContractMethod<[_cUsername: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "reportBank"
  ): TypedContractMethod<[_bankAddr: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "upVoteCustomer"
  ): TypedContractMethod<[_cUsername: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "viewBankDetails"
  ): TypedContractMethod<[_bankAddr: AddressLike], [BankStructOutput], "view">;
  getFunction(
    nameOrSignature: "viewCustomer"
  ): TypedContractMethod<
    [_cUsername: BytesLike],
    [CustomerStructOutput],
    "view"
  >;

  filters: {};
}
